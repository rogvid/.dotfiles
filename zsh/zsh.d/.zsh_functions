function tops(){
  # List the top 10 processes by memory usage or CPU usage
  if [ $# -eq 0 ]; then
      ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | head
  else
      ps -eo pid,ppid,cmd,%mem,%cpu --sort=-$1 | head
  fi
}

function pathappend() {
  # Add directories to the PATH if not already there.
  # Directories will only be added if the path exists and is not already in the PATH
  # Usage: pathappend dir1 dir2 dir3 ...
  for ARG in "$@"
  do
    eval extra_path=$ARG
    if [ -d "$extra_path" ] && [[ ":$PATH:" != *":$extra_path:"* ]]; then
        PATH="${PATH:+"$PATH:"}$extra_path"
    fi
  done
  unset extra_path
}

function evalornotify() {
  if $(command -v -- $1 > /dev/null 2>&1); then
    eval $2
  else
    echo "$1 has not been installed"
  fi
}

function bak() {
  cp -r $1{,.bak}
}

notify() {
    # Check if there are enough arguments
    if [ "$#" -lt 2 ]; then
        echo "USAGE:"
        echo "    notify <curl_options> <time>"
        echo "EXAMPLES:" 
        echo "    notify -H 'Title: Alert!' -H 'Attach: Image.jpg' -d 'This was detected' now"
        echo '    notify
                    -H "Title: Unauthorized access detected" 
                    -H "Priority: urgent" 
                    -H "Tags: warning,skull" 
                    -d "Remote access to phils-laptop detected. Act right away." 
                    now
        '
        return 1
    fi

    # Extract the time (last argument)
    local time="${@: -1}"

    # Extract the curl command options (all but the last argument)
    local curl_options=("${@:1:$#-1}")

    # Generate a temporary script for the curl command
    local tmp_script
    tmp_script=$(mktemp)

    # Write the curl command with options to the temporary script
    echo "curl ${curl_options[*]} ntfy.sh/kvist-notifications" > "$tmp_script"

    # Schedule the command using 'at'
    at "$time" < "$tmp_script" 2>/dev/null

    # Check if the scheduling was successful
    if [ "$?" -eq 0 ]; then
        echo "Curl command scheduled to run at $time."
    else
        echo "Failed to schedule curl command."
    fi

    # Clean up the temporary script
    rm "$tmp_script"
}

# function notify() {
#   local COUNT="$#"
#   local COMMAND="$1"
#   local MESSAGE="$1"
#   local TIME="$2"
#   if [[ $COUNT -eq 0 || "$COMMAND" == "help" || "$COMMAND" == "--help" || "$COMMAND" == "-h" ]]; then
#     echo; 
#     echo "USAGE:"
#     echo "    notify <message> <time> [<channel>]";
#     echo;
#     echo "EXAMPLES:";
#     echo '    notify "Good morning" "At: tomorrow, 10am"';
#     echo '    notify "Its 30 minutes later now" "In: 30min"';
#     echo '    notify "Unix timestamps are awesome!" "Delay: 1639194738"';
#     echo;
#   else
#     channel=${3:-kvist-notifications}
#     echo 'curl -H "$2" -d "$1" "ntfy.sh/${channel}' | at $TIME
#     echo "Notification scheduled with NTFY at $TIME"
#   fi
# }


